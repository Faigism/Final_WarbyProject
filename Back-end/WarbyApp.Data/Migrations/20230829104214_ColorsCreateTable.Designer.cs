// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarbyApp.Data;

#nullable disable

namespace WarbyApp.Data.Migrations
{
    [DbContext(typeof(WarbyAppDbContext))]
    [Migration("20230829104214_ColorsCreateTable")]
    partial class ColorsCreateTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WarbyApp.Core.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColorImage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("WarbyApp.Core.Entities.Eyeglasses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AllCategory")
                        .HasColumnType("bit");

                    b.Property<bool>("AutumnaltonesCategory")
                        .HasColumnType("bit");

                    b.Property<bool>("BestsellersCategory")
                        .HasColumnType("bit");

                    b.Property<bool>("BoldshapesCategory")
                        .HasColumnType("bit");

                    b.Property<bool>("ClassicmetalsCategory")
                        .HasColumnType("bit");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("money");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Description2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(5,2)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<bool>("NewarrivalsCategory")
                        .HasColumnType("bit");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("Eyeglasses");
                });

            modelBuilder.Entity("WarbyApp.Core.Entities.EyeglassesColor", b =>
                {
                    b.Property<int>("EyeglassesId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.HasKey("EyeglassesId", "ColorId");

                    b.HasIndex("ColorId");

                    b.ToTable("EyeglassesColors");
                });

            modelBuilder.Entity("WarbyApp.Core.Entities.Sunglasses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AllCategory")
                        .HasColumnType("bit");

                    b.Property<bool>("AutumnaltonesCategory")
                        .HasColumnType("bit");

                    b.Property<bool>("BestsellersCategory")
                        .HasColumnType("bit");

                    b.Property<bool>("BoldshapesCategory")
                        .HasColumnType("bit");

                    b.Property<bool>("ClassicmetalsCategory")
                        .HasColumnType("bit");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("money");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Description2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(5,2)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<bool>("NewarrivalsCategory")
                        .HasColumnType("bit");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("Sunglasses");
                });

            modelBuilder.Entity("WarbyApp.Core.Entities.SunglassesColor", b =>
                {
                    b.Property<int>("SunglassesId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.HasKey("SunglassesId", "ColorId");

                    b.HasIndex("ColorId");

                    b.ToTable("SunglassesColors");
                });

            modelBuilder.Entity("WarbyApp.Core.Entities.EyeglassesColor", b =>
                {
                    b.HasOne("WarbyApp.Core.Entities.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarbyApp.Core.Entities.Eyeglasses", "Eyeglasses")
                        .WithMany("Colors")
                        .HasForeignKey("EyeglassesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Eyeglasses");
                });

            modelBuilder.Entity("WarbyApp.Core.Entities.SunglassesColor", b =>
                {
                    b.HasOne("WarbyApp.Core.Entities.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarbyApp.Core.Entities.Sunglasses", "Sunglasses")
                        .WithMany("Colors")
                        .HasForeignKey("SunglassesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Sunglasses");
                });

            modelBuilder.Entity("WarbyApp.Core.Entities.Eyeglasses", b =>
                {
                    b.Navigation("Colors");
                });

            modelBuilder.Entity("WarbyApp.Core.Entities.Sunglasses", b =>
                {
                    b.Navigation("Colors");
                });
#pragma warning restore 612, 618
        }
    }
}
